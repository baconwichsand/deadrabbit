import pdb
from scipy.stats import skew, kurtosis
from matplotlib import rc
from RandGen import rand_range, generate
from Visualization import plot_difference_IFS, change_hist, plot_density, plot_IFS
from analyze import differences, coarse_grain, driven_IFS, skew_normal_density
import numpy as np
import pylab as plt


def np_rand(num_points):
    """Generates random points between 0 and 1"""

    global generator
    generator = 'Numpy Random'

    return np.random.random(num_points)


def straight_line(num_points, increment):
    """Straight line with increment"""

    global generator, params
    generator = 'Straight line'
    params = str(increment)

    output = np.empty(num_points)
    output.fill(1000.)
    output = np.array([output[0] + increment*n for n in range(len(output))])

    return output


fig = plt.figure()
fig.subplots_adjust(left=.02, bottom=.02, right=.98, top=.98, wspace=.1, hspace=.1)
rc('font', family='serif')
rc('text', usetex=True)


# Target Data
plt1 = plt.subplot2grid((6, 8), (0, 0), colspan=8, rowspan=1)

# Target Data info
plt2 = plt.subplot2grid((6, 8), (1, 0), colspan=1, rowspan=2)

# Target Data stuff 
plt3 = plt.subplot2grid((6, 8), (1, 1), colspan=1, rowspan=1)
plt4 = plt.subplot2grid((6, 8), (1, 2), colspan=1, rowspan=1)
plt5 = plt.subplot2grid((6, 8), (1, 3), colspan=1, rowspan=1)
plt6 = plt.subplot2grid((6, 8), (1, 4), colspan=1, rowspan=1)
plt7 = plt.subplot2grid((6, 8), (1, 5), colspan=1, rowspan=1)
plt8 = plt.subplot2grid((6, 8), (1, 6), colspan=1, rowspan=1)
plt9 = plt.subplot2grid((6, 8), (1, 7), colspan=1, rowspan=1)
plt10 = plt.subplot2grid((6, 8), (2, 1), colspan=1, rowspan=1)
plt11 = plt.subplot2grid((6, 8), (2, 2), colspan=1, rowspan=1)
plt12 = plt.subplot2grid((6, 8), (2, 3), colspan=1, rowspan=1)
plt13 = plt.subplot2grid((6, 8), (2, 4), colspan=1, rowspan=1)
plt14 = plt.subplot2grid((6, 8), (2, 5), colspan=1, rowspan=1)
plt15 = plt.subplot2grid((6, 8), (2, 6), colspan=1, rowspan=1)
plt16 = plt.subplot2grid((6, 8), (2, 7), colspan=1, rowspan=1)

# Differences
plt17 = plt.subplot2grid((6, 8), (3, 0), colspan=8, rowspan=1)

# Differences info
plt18 = plt.subplot2grid((6, 8), (4, 0), colspan=1, rowspan=2)

# Differences stuff
plt19 = plt.subplot2grid((6, 8), (4, 1), colspan=1, rowspan=1)
plt20 = plt.subplot2grid((6, 8), (4, 2), colspan=1, rowspan=1)
plt21 = plt.subplot2grid((6, 8), (4, 3), colspan=1, rowspan=1)
plt22 = plt.subplot2grid((6, 8), (4, 4), colspan=1, rowspan=1)
plt23 = plt.subplot2grid((6, 8), (4, 5), colspan=1, rowspan=1)
plt24 = plt.subplot2grid((6, 8), (4, 6), colspan=1, rowspan=1)
plt25 = plt.subplot2grid((6, 8), (4, 7), colspan=1, rowspan=1)
plt26 = plt.subplot2grid((6, 8), (5, 1), colspan=1, rowspan=1)
plt27 = plt.subplot2grid((6, 8), (5, 2), colspan=1, rowspan=1)
plt28 = plt.subplot2grid((6, 8), (5, 3), colspan=1, rowspan=1)
plt29 = plt.subplot2grid((6, 8), (5, 4), colspan=1, rowspan=1)
plt30 = plt.subplot2grid((6, 8), (5, 5), colspan=1, rowspan=1)
plt31 = plt.subplot2grid((6, 8), (5, 6), colspan=1, rowspan=1)
plt32 = plt.subplot2grid((6, 8), (5, 7), colspan=1, rowspan=1)

######### PLOT

num_points = 10000
generator = ''
params = ()

rdata = np_rand(num_points)
plt1.plot(rdata, 'k')

# Target Data info
plt2.axis('off')
plt2.text(.03, .53, r'\begin{tabular}{lc} \\ {gen.: %s} & \\ {params: %s} \\ {points: %s} & \\ \\ {mean: %s} & \\ {median: %s} & \\ {std. dev.: %s} & \\ {skew: %s} & \\ {kurtosis: %s} \end{tabular}' % (generator, params, str(num_points), str(round(np.mean(rdata), 4)), str(round(np.median(rdata), 4)), str(round(np.std(rdata), 4)), str(round(skew(rdata), 4)), str(round(kurtosis(rdata), 4))))

# Histogram
plt3.hist(rdata, bins=50)

# Plot driven IFS equal weighted
data = driven_IFS(coarse_grain(rdata, method='equal'))
plot_IFS(plt4, data)

# Plot driven IFS mean centered
data = driven_IFS(coarse_grain(rdata, method='mean_centered'))
plot_IFS(plt5, data)

# Plot driven IFS median centered
data = driven_IFS(coarse_grain(rdata, method='median_centered'))
plot_IFS(plt6, data)


rdata_density = skew_normal_density(rdata)
plt10.plot(rdata_density[0], rdata_density[1])

diff = differences(rdata, method='nominal')
plt17.plot(diff, 'k')

# Dif info
plt18.axis('off')
plt18.text(.03, .53, r'\begin{tabular}{lc} \\ {mean: %s} & \\ {median: %s} & \\ {std. dev.: %s} & \\ {skew: %s} & \\ {kurtosis: %s} \end{tabular}' % (str(round(np.mean(diff), 4)), str(round(np.median(diff), 4)), str(round(np.std(diff), 4)), str(round(skew(diff), 4)), str(round(kurtosis(diff), 4))))

diff_ifs = driven_IFS(coarse_grain(diff))
plot_IFS(plt19, diff_ifs)

diff_density = skew_normal_density(diff)
plt20.plot(diff_density[0], diff_density[1])

plt.show()
